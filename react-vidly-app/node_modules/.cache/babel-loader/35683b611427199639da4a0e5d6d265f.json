{"ast":null,"code":"var _jsxFileName = \"/Users/cozmus/Projects/code-with-mosh-react-tutorials/react-vidly-app/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      currentPage: 1,\n      pageSize: 4,\n      sortColumn\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movie.liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = path => {\n      this.setState({\n        sortColumn: {\n          path,\n          order: \"asc\"\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    // new genre added as \"All Genres\" to existing array\n    const genres = [{\n      _id: \" \",\n      name: \"All Genres\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    const count = this.state.movies.length;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allMovies\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies in the database.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }, this);\n    const filteredMovies = selectedGenre && selectedGenre._id // first genre is \"All Genres\" and does not have._id\n    ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n    const movies = paginate(filteredMovies, currentPage, pageSize);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: this.state.selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", filteredMovies.length, \" movies in the database.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          onLike: this.handleLike,\n          onDelete: this.handleDelete,\n          onSort: this.handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: filteredMovies.length,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/cozmus/Projects/code-with-mosh-react-tutorials/react-vidly-app/src/components/movies.jsx"],"names":["React","Component","getMovies","ListGroup","MoviesTable","Pagination","paginate","getGenres","Movies","state","movies","genres","currentPage","pageSize","sortColumn","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","selectedGenre","handleSort","path","order","componentDidMount","name","render","count","length","allMovies","filteredMovies"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport { getGenres } from \"../services/fakeGenreService\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    sortColumn\n  };\n\n  componentDidMount() {\n    // new genre added as \"All Genres\" to existing array\n    const genres = [{ _id: \" \", name: \"All Genres\" }, ...getGenres()];\n\n    this.setState({\n      movies: getMovies(),\n      genres,\n    });\n  }\n\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movie.liked;\n    this.setState({\n      movies,\n    });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({\n      currentPage: page,\n    });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({\n      selectedGenre: genre,\n      currentPage: 1,\n    });\n  };\n\n  handleSort = (path) => {\n    this.setState({ sortColumn: { path, order: \"asc\" } });\n  };\n\n  render() {\n    const count = this.state.movies.length;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allMovies,\n    } = this.state;\n\n    if (count === 0) return <p>There are no movies in the database.</p>;\n\n    const filteredMovies =\n      selectedGenre && selectedGenre._id // first genre is \"All Genres\" and does not have._id\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n        : allMovies;\n\n    const movies = paginate(filteredMovies, currentPage, pageSize);\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          <p>Showing {filteredMovies.length} movies in the database.</p>\n          <MoviesTable\n            movies={movies}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={filteredMovies.length}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}